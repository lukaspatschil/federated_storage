version: "3.2"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - backend

  gateway-service:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
      args:
        - BUILD_CONTEXT=gateway-service
    hostname: gateway-service
    ports:
      - 3000:3000
    # depends_on:
    #   - rabbitmq
    # environment:
    #   WAIT_HOSTS: rabbitmq:5672
    #   WAIT_TIMEOUT: 120
    #   WAIT_SLEEP_INTERVAL: 5
    networks:
      - backend
      - frontend

  dropbox-service:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
      args:
        - BUILD_CONTEXT=dropbox-service
    hostname: dropbox-service
    # depends_on:
    #   - rabbitmq
    # environment:
    #   WAIT_HOSTS: rabbitmq:5672
    #   WAIT_TIMEOUT: 120
    #   WAIT_SLEEP_INTERVAL: 5
    networks:
      - backend

  logger-service:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
      args:
        - BUILD_CONTEXT=logger-service
    hostname: logger-service
    depends_on:
      - rabbitmq
    environment:
      WAIT_HOSTS: rabbitmq:5672
      WAIT_TIMEOUT: 120
      WAIT_SLEEP_INTERVAL: 5
    networks:
      - backend

  minio-service:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
      args:
        - BUILD_CONTEXT=minio-service
    hostname: minio-service
    # depends_on:
    #   - rabbitmq
    # environment:
    #   WAIT_HOSTS: rabbitmq:5672
    #   WAIT_TIMEOUT: 120
    #   WAIT_SLEEP_INTERVAL: 5
    networks:
      - backend

  mongodb-service:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
      args:
        - BUILD_CONTEXT=mongodb-service
    hostname: mongodb-service
    # depends_on:
    #   - rabbitmq
    # environment:
    #   WAIT_HOSTS: rabbitmq:5672
    #   WAIT_TIMEOUT: 120
    #   WAIT_SLEEP_INTERVAL: 5
    networks:
      - backend

  picture-service:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
      args:
        - BUILD_CONTEXT=picture-service
    hostname: picture-service
    # depends_on:
    #   - rabbitmq
    # environment:
    #   WAIT_HOSTS: rabbitmq:5672
    #   WAIT_TIMEOUT: 120
    #   WAIT_SLEEP_INTERVAL: 5
    networks:
      - backend
  
  # webclient:
  #   build: ./frontend
  #   volumes:
  #       - ./frontend:/var/www/frontend
  #       - /var/www/frontend/node_modules
  #   ports:
  #       - 4200:4200
  #   networks:
  #     - frontend

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge